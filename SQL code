CREATE TABLE CATEGORY
(
  CategoryID INT NOT NULL,
  CategoryName VARCHAR(250) NOT NULL,
  PRIMARY KEY (CategoryID)
);

CREATE TABLE VENDOR
(
  VendorID INT NOT NULL,
  VendorName VARCHAR(250) NOT NULL,
  PRIMARY KEY (VendorID)
);

CREATE TABLE CUSTOMER
(
  CustomerID INT NOT NULL,
  CustomerName VARCHAR(250) NOT NULL,
  CustomerZipcode CHAR(7) NOT NULL,
  PRIMARY KEY (CustomerID)
);

CREATE TABLE REGION
(
  RegionID INT NOT NULL,
  RegionName VARCHAR(250) NOT NULL,
  PRIMARY KEY (RegionID)
);

CREATE TABLE PRODUCT
(
  ProductID INT NOT NULL,
  ProductName VARCHAR(250) NOT NULL,
  ProductPrice INT NOT NULL,
  VendorID INT NOT NULL,
  CategoryID INT NOT NULL,
  PRIMARY KEY (ProductID),
  FOREIGN KEY (VendorID) REFERENCES VENDOR(VendorID),
  FOREIGN KEY (CategoryID) REFERENCES CATEGORY(CategoryID)
);

CREATE TABLE STORE
(
  StoreID INT NOT NULL,
  StoreZipcode CHAR(7) NOT NULL,
  RegionID INT NOT NULL,
  PRIMARY KEY (StoreID),
  FOREIGN KEY (RegionID) REFERENCES REGION(RegionID)
);

CREATE TABLE SALES_TRANSACTION
(
  TransactionID INT NOT NULL,
  TransactionDate DATE NOT NULL,
  StoreID INT NOT NULL,
  CustomerID INT NOT NULL,
  PRIMARY KEY (TransactionID),
  FOREIGN KEY (StoreID) REFERENCES STORE(StoreID),
  FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID)
);

CREATE TABLE Includes
(
  QuantitySold INT NOT NULL,
  ProductID INT NOT NULL,
  TransactionID INT NOT NULL,
  PRIMARY KEY (ProductID, TransactionID),
  FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID),
  FOREIGN KEY (TransactionID) REFERENCES SALES_TRANSACTION(TransactionID)
);
